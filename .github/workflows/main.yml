name: CI-CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest
    outputs:
      image_tag: v${{ github.run_number }}
    steps:
      - name: Checkout do código
        uses: actions/checkout@v5

      - name: Setup do Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Instalar dependências
        working-directory: ./src
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Executar testes
        working-directory: ./src
        run: |
          python -m pytest tests/ -v

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build e push da imagem Docker
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Dockerfile
          push: true
          tags: |
            enchenu/encontros-tech:latest
            enchenu/encontros-tech:v${{ github.run_number }}

  CD-Homolog:
    runs-on: ubuntu-latest
    needs: [CI]
    environment: homologacao
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configurar contexto Kubernetes
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Criar namespace de homologação
        run: kubectl create namespace tech-homolog --dry-run=client -o yaml | kubectl apply -f -

      - name: Criar secret do banco
        run: |
          kubectl create secret generic database-secret \
            --from-literal=DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --namespace=tech-homolog \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Aplicar manifestos
        run: kubectl apply -f k8s/deployment.yaml -n tech-homolog

      - name: Atualizar imagem para a versão atual
        run: |
          IMAGE_TAG=v${{ github.run_number }}
          kubectl set image deployment/encontros-tech encontros-tech=enchenu/encontros-tech:$IMAGE_TAG -n tech-homolog

  CD-Prod:
    runs-on: ubuntu-latest
    needs: [CD-Homolog]
    environment: producao
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Configurar contexto Kubernetes
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Criar namespace de produção
        run: kubectl create namespace tech-prod --dry-run=client -o yaml | kubectl apply -f -

      - name: Criar secret do banco
        run: |
          kubectl create secret generic database-secret \
            --from-literal=DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --namespace=tech-prod \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Aplicar manifestos
        run: kubectl apply -f k8s/deployment.yaml -n tech-prod

      - name: Atualizar imagem para a versão atual
        run: |
          IMAGE_TAG=v${{ github.run_number }}
          kubectl set image deployment/encontros-tech encontros-tech=enchenu/encontros-tech:$IMAGE_TAG -n tech-prod
